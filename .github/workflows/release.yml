name: Release

on:
  workflow_dispatch:

jobs:
  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - uses: nrwl/nx-set-shas@v3
      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16'
      #     cache: 'yarn'
      #     registry-url: 'https://registry.npmjs.org'
      #     always-auth: true
      # - name: Cache node modules
      #   id: cache-nodemodules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: |
      #       node_modules
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # - name: Setup Git
      #   run: |
      #     git config user.name "GitHub Bot"
      #     git config user.email "bramzijpcode@gmail.com"

      # - run: yarn --frozen-lockfile

      # - name: Version
      #   run: yarn nx affected --base=3068a76d35c83c524db3b91d9c98d2fe4bb80747 --releaseAs=prerelease  --preid=beta3 --target=versionCI --parallel 1 --nx-bail
      - name: Add changes
        run: echo ${{git rev-parse HEAD}} > ./temp && git add . && git commit -m fakeChange --no-verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Push tags
      #   run: git push --tags
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Tag last-release
      #   run: |
      #     git tag -f last-release
      #     git push origin last-release --force
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Publish changes
      #   run: yarn nx affected --target=publishCI --parallel 1
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
