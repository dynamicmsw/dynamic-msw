name: Release

on:
  workflow_dispatch:

jobs:
  # quality-assurance:
  #   if: startsWith(github.ref, 'refs/heads/release')
  #   uses: ./.github/workflows/quality-assurance.yml
  release:
    if: startsWith(github.ref, 'refs/heads/release')
    environment: release
    runs-on: ubuntu-latest
    # needs: quality-assurance
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PUSH_TOKEN }}
      - uses: nrwl/nx-set-shas@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      - name: Cache modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-modules
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "bramzijpcode@gmail.com"

      - run: yarn --frozen-lockfile

      - name: Check if everything builds with nx release cache
        run: yarn nx affected:build --parallel=3
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_RELEASE_TOKEN }}
      - name: Version
        run: yarn nx run dashboard:versionCI --releaseAs=patch --skip-nx-cache
      - name: Check for created tags to see if a new version has been made
        run: git tag -l --contains $(git rev-parse HEAD) | cat | grep . && echo "Found newly created tag" || { echo "No changes found"; exit 1; };

      - name: Push changes
        run: git push origin HEAD
      - name: Push tags
        run: git push --tags
      - name: Tag last-release
        run: |
          git tag -f last-release
          git push origin last-release --force

      - name: Publish changes
        run: yarn nx affected --target=publishCI --parallel 1 --nx-bail
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_RELEASE_TOKEN }}
