name: Release

concurrency:
  group: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        default: ''

jobs:
  release:
    name: release
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/release')
    environment: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      - name: Enable corepack
        run: corepack enable
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        id: cache-pnpm-store
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "bramzijpcode@gmail.com"
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4
      - run: pnpm i --frozen-lockfile
      - run: npx nx format:check
      - run: npx nx affected -t lint test typetest e2e-ci --parallel=5
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      - run: npx nx release version ${{ github.event.inputs.version }} --git-tag --git-commit
      - run: npx nx run-many -t build --parallel=10
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      - run: npx nx run-many -t can-publish --parallel=40
      - run: git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.PAT}}
      - run: npx nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
